
SELECT EMP_NAME ,
       SALARY*12 ,
       ( SALARY + ( SALARY * BONUS_PCT ) ) * 12
FROM EMPLOYEE ;


SELECT EMP_NAME AS 이름 ,
       SALARY*12 AS "1년급여" ,
       ( SALARY + ( SALARY * BONUS_PCT ) ) * 12 AS 총소득
FROM EMPLOYEE ;

SELECT EMP_ID ,
       EMP_NAME , 
       '재직' AS 근무여부
FROM EMPLOYEE ;

SELECT DISTINCT DEPT_ID
FROM EMPLOYEE ;


SELECT DISTINCT JOB_ID , DEPT_ID
FROM EMPLOYEE ;

SELECT EMP_NAME AS 이름 , 
       DEPT_ID AS 부서 
FROM EMPLOYEE
WHERE DEPT_ID = '90' ;

SELECT EMP_NAME AS 이름 ,
       SALARY AS 급여
FROM EMPLOYEE
WHERE SALARY > 4000000 ;

SELECT EMP_NAME AS 이름 ,
       DEPT_ID AS 부서 , 
       SALARY AS 급여
FROM EMPLOYEE
WHERE DEPT_ID = '90'
AND SALARY > 2000000 ;


SELECT EMP_NAME AS 이름 ,
       DEPT_ID AS 부서 , 
       SALARY AS 급여
FROM EMPLOYEE
WHERE DEPT_ID = '90'
OR    DEPT_ID = '20' ;

SELECT EMP_ID || EMP_NAME || SALARY
FROM EMPLOYEE ;

SELECT EMP_NAME ||'의 월급은 '||SALARY||'원 입니다.' AS 안내
FROM EMPLOYEE ;

SELECT EMP_NAME AS 이름 ,
       SALARY AS 연봉
FROM EMPLOYEE
WHERE SALARY BETWEEN 3500000 AND 5500000 ;


SELECT EMP_NAME AS 이름 ,
       SALARY AS 연봉
FROM EMPLOYEE
WHERE SALARY >= 3500000 
AND SALARY <= 5500000 ;

SELECT EMP_NAME AS 이름 ,
       SALARY AS 연봉
FROM EMPLOYEE
WHERE EMP_NAME LIKE '김%' ;

SELECT EMP_NAME AS 이름 , 
       PHONE AS 전화번호
FROM EMPLOYEE
WHERE PHONE LIKE '___9%' ;

SELECT *
FROM EMPLOYEE
WHERE EMAIL LIKE '___#_%' ESCAPE '#' ;


SELECT EMP_NAME AS 이름 ,
       SALARY AS 연봉
FROM EMPLOYEE
WHERE EMP_NAME NOT LIKE '김%' ;

/* 부서번호와 사수번호가 없는 사원의 정보를 검색 */

SELECT *
FROM EMPLOYEE
WHERE MGR_ID IS NULL AND DEPT_ID IS NULL ;

/* 부서번호가 60 또는 90번인 사원의 정보를 검색한다면? */
SELECT *
FROM EMPLOYEE
WHERE DEPT_ID IN ( '60' , '90') ;

SELECT *
FROM EMPLOYEE
WHERE (DEPT_ID = '20'
OR DEPT_ID = '90')
AND SALARY >= 3000000 ;

/* Work Book 1 */

/* Q1 */

SELECT DEPARTMENT_NAME AS "학과 명" ,
       CATEGORY AS 계열
FROM TB_DEPARTMENT ;


/* Q2 */

SELECT DEPARTMENT_NAME||'의 정원은' ||CAPACITY||'명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT ;

/* Q3 */

SELECT STUDENT_NAME
FROM TB_STUDENT 
WHERE DEPARTMENT_NO = '001'
AND   ABSENCE_YN = 'Y'
AND STUDENT_SSN LIKE '_______2%' ;

/* Q4 */

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ( 'A513079' , 'A513090' , 'A513091' , 'A513110' , 'A513119' )

/* Q5 */

SELECT DEPARTMENT_NAME
     , CATEGORY
FROM  TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30 ;

/* Q6 */

SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL ;

/* Q7 */

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL

/* Q8 */
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL

/* Q9 */

SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
WHERE CATEGORY LIKE '%' ;

/* Q10 */

SELECT STUDENT_NO ,
       STUDENT_NAME , 
       STUDENT_SSN
FROM TB_STUDENT
WHERE ENTRANCE_DATE LIKE '02%' 
AND STUDENT_ADDRESS LIKE '%전주%' 

---------------------

SELECT LENGTH(CHARTYPE) ,
       LENGTH(VARCHARTYPE)
       FROM COLUMN_LENGTH ;
       
SELECT EMAIL ,
       INSTR( EMAIL,'c',-1,2 )
FROM EMPLOYEE ;

SELECT EMAIL,
       INSTR( EMAIL, 'c', INSTR( EMAIL,'.')-1)
FROM EMPLOYEE

SELECT EMAIL AS 원본데이터,
       LENGTH(EMAIL) AS 원본길이,
       LPAD(EMAIL, 20, '.') AS 적용결과,
       LENGTH(LPAD(EMAIL, 20, '.')) AS 결과길이
FROM EMPLOYEE ;

SELECT LTRIM('   tech')
FROM DUAL ;


SELECT LTRIM('000123' , '0')
FROM DUAL ;

SELECT LTRIM('xyxzyyyTech' , 'xyz')
FROM DUAL ;

--TRIM (LEADING | TRAILING | BOTH FROM SOURCE)
SELECT TRIM(BOTH '1' FROM '111111TECH11111')
FROM DUAL ;


SELECT SUBSTR('This is a test', 6 , 2)
FROM DUAL ;

SELECT SUBSTR('TECHONTHNET',-3,-3)
FROM DUAL

SELECT SUBSTR('TECHONTHENET' ,-8)
FROM DUAL ;

SELECT EMP_NAME ,
       SUBSTR(HIRE_DATE, 1, 2)|| '년' ||SUBSTR(HIRE_DATE, 4, 2)|| '월' ||SUBSTR(HIRE_DATE, 7, 2)|| '일' AS 입사일
FROM EMPLOYEE

--------------연습
SELECT INSTR(EMAIL,'@')
FROM EMPLOYEE ;

SELECT SUBSTR( EMAIL , 1 , (INSTR(EMAIL,'@') - 1))
FROM EMPLOYEE ;


--------------- Round ( 숫자 ,  자릿수)
SELECT ROUND(125.315)
FROM DUAL;

SELECT ROUND(125.315 , 2)
FROM DUAL;

SELECT ROUND(125.315,-1)
FROM DUAL;

SELECT ROUND(-125.315, 2)
FROM DUAL ;

------------------ SYSDATE ,ADD_MONTHS (DATE, N)
SELECT SYSDATE
FROM DUAL ;

SELECT ADD_MONTHS(HIRE_DATE,120)
FROM EMPLOYEE ;

SELECT HIRE_DATE , 
       TRUNC(MONTHS_BETWEEN(SYSDATE ,HIRE_DATE) / 12 )AS 근속년수
FROM EMPLOYEE
WHERE MONTHS_BETWEEN(SYSDATE , HIRE_DATE) > 240 ;


----------------------SELET TO_CHAR

SELECT TO_CHAR(SYSDATE, 'PM HH24:MI:SS')
FROM DUAL ;

SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD')
FROM DUAL

SELECT TO_CHAR( SYSDATE , 'AM HH:MI:SS')
FROM DUAL ;

SELECT EMP_NAME , 
       TO_CHAR (HIRE_DATE, 'YYYY-MM-DD'),
       TO_CHAR (HIRE_DATE, 'YYYY"년" MM"월" DD"일"')
FROM EMPLOYEE ;

----------------------------------
SELECT EMP_NAME AS 이름,
       HIRE_DATE AS 기본입사일, 
       TO_CHAR(HIRE_DATE, 'YYYY/MM/DD HH24:MI:SS') AS 상세입사일
FROM EMPLOYEE
WHERE JOB_ID IN('J1' , 'J2');

SELECT EMP_NAME
FROM EMPLOYEE
WHERE HIRE_DATE = '04/04/30' ;

SELECT EMP_NAME
FROM EMPLOYEE
WHERE HIRE_DATE = '90/04/01' ;

SELECT EMP_NAME ,
       HIRE_DATE
FROM EMPLOYEE
WHERE TO_CHAR(HIRE_DATE , 'YYMMDD') = '900401' ;

-----------------------------------------------------
SELECT TO_DATE('20100101' , 'YYYYMMDD')
FROM DUAL ;

SELECT TO_CHAR('20100101' , 'YYYY,MON')
FROM DUAL ;

SELECT TO_CHAR(TO_DATE('20100101' , 'YYYYMMDD') ,'YYYY, MON')
FROM DUAL ;

SELECT TO_DATE('041030 143000' , 'YYMMDD HH24MISS')
FROM DUAL ;

SELECT TO_CHAR(TO_DATE('041030 143000', 'YYMMDD HH24MISS'), 'DD-MON-YY HH:MI:SS PM' ) 
FROM DUAL ;


SELECT TO_DATE( '980630', 'YYMMDD')
FROM DUAL ;

SELECT TO_CHAR(TO_DATE( '980630', 'YYMMDD'), 'YYYY.MM.DD')
FROM DUAL ;

---------------------------------------------------------
SELECT SYSDATE AS 현재,
       '95/10/27' AS 입력,
       TO_CHAR(TO_DATE('95/10/27','YY/MM/DD'),'YYYY/MM/DD') AS YY형식1,
       TO_CHAR(TO_DATE('95/10/27','YY/MM/DD'),'RRRR/MM/DD') AS YY형식2,
       TO_CHAR(TO_DATE('95/10/27','RR/MM/DD'),'YYYY/MM/DD') AS RR형식3,
       TO_CHAR(TO_DATE('95/10/27','RR/MM/DD'),'RRRR/MM/DD') AS RR형식2
FROM DUAL ;

SELECT EMP_NO,
       SUBSTR(EMP_NO , 1, 6) + SUBSTR(EMP_NO , 8, 7)
FROM EMPLOYEE ;

--------------------------------------------------------
SELECT EMP_NAME ,
       (SALARY*12)+( (SALARY*12)*NVL(BONUS_PCT,0))
FROM EMPLOYEE
WHERE SALARY > 3500000

---------------------------------------------------------
SELECT EMP_NAME ,
       EMP_NO ,
       DECODE(SUBSTR(EMP_NO , 8, 1) , '1' , '남' , '여')AS 성별
FROM EMPLOYEE


-------------------------------------------------------
SELECT EMP_ID,EMP_NAME,
       DECODE(MGR_ID, NULL, '없음', MGR_ID) AS 관리자
FROM EMPLOYEE
WHERE JOB_ID = 'J4';

SELECT EMP_ID,EMP_NAME,
       NVL(MGR_ID, '없음') AS 관리자
FROM EMPLOYEE
WHERE JOB_ID = 'J4';

-----------------------------------------------------------
SELECT EMP_NAME , 
       JOB_ID ,
       DECODE(JOB_ID, 'J1', SALARY * 1.1, 'J2', SALARY * 1.2 , salary) AS "인상급여"
FROM EMPLOYEE
WHERE JOB_ID IN ('J1' , 'J2') ;

SELECT EMP_NAME ,
       JOB_ID ,
       CASE JOB_ID WHEN 'J1' THEN SALARY*1.1 
                   WHEN 'J2' THEN SALARY*1.2 
                   ELSE SALARY 
                   END AS "인상급여"
FROM EMPLOYEE

SELECT EMP_NAME ,
       EMP_ID ,
       CASE WHEN SALARY <= 3000000 THEN 'C'
            WHEN SALARY > 4000000 THEN 'A'
            ELSE 'B' END
            AS "급여등급"
FROM EMPLOYEE

----함수의 중첩을 이용하셔야 합니다.
----사원테이블에서 직원의 이름,이메일,이메일아이디를 조회한다면?)
SELECT EMP_NAME ,
       EMAIL ,
       SUBSTR( EMAIL , 1 , (INSTR(EMAIL,'@') - 1)) AS "EMAIL_ID"
FROM EMPLOYEE ;

---------정렬 ! 정렬을 원한다 !ORDER BY!----------
--------ORDER BY 기준컬럼 [ASC | DESC] ----------
SELECT EMP_NAME ,
       SALARY ,
       CASE WHEN SALARY <= 3000000 THEN 'C'
            WHEN SALARY > 4000000 THEN 'A'
            ELSE 'B' END
            AS "급여등급"
FROM EMPLOYEE
ORDER BY 3 ,2 DESC ;

------------------------------------------------
SELECT SUM(SALARY), SUM(DISTINCT SALARY)
FROM EMPLOYEE
WHERE DEPT_ID = '50'
OR DEPT_ID IS NULL ;

------------------------------------------------
SELECT DEPT_ID ,
       SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_ID
ORDER BY DEPT_ID NULLS LAST ;